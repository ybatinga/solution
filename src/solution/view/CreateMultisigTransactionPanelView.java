/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package solution.view;

import solution.control.RegistryServiceControl;
import solution.model.GetRawTransactionModel;
import solution.service.StringsService;

/**
 *
 * @author ssd
 */
public class CreateMultisigTransactionPanelView extends javax.swing.JPanel {

    /**
     * Creates new form CreateMultisigTransactionPanel
     */
    public CreateMultisigTransactionPanelView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateMultisigTransactionLabel = new javax.swing.JLabel();
        transactionIdOfTransferredContractLabel = new javax.swing.JLabel();
        createMultisigTransactionButton = new javax.swing.JButton();
        multisigRawTransactionHexLabel = new javax.swing.JLabel();
        transactionIdOfContractSentToMultisigTextField = new java.awt.TextField();
        multisigRawTransactionHexTextField = new java.awt.TextField();

        setBackground(new java.awt.Color(247, 247, 247));

        CreateMultisigTransactionLabel.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        CreateMultisigTransactionLabel.setText("Create Multisig Transaction");

        transactionIdOfTransferredContractLabel.setText("Transaction ID of Contract Sent to Multisig:");

        createMultisigTransactionButton.setText("Create");
        createMultisigTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMultisigTransactionButtonActionPerformed(evt);
            }
        });

        multisigRawTransactionHexLabel.setText("Multisig Raw Transaction Hex:");

        multisigRawTransactionHexTextField.setBackground(new java.awt.Color(248, 248, 248));
        multisigRawTransactionHexTextField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(transactionIdOfTransferredContractLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transactionIdOfContractSentToMultisigTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CreateMultisigTransactionLabel)
                    .addComponent(createMultisigTransactionButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(multisigRawTransactionHexLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multisigRawTransactionHexTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateMultisigTransactionLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transactionIdOfTransferredContractLabel)
                    .addComponent(transactionIdOfContractSentToMultisigTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createMultisigTransactionButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(multisigRawTransactionHexLabel)
                    .addComponent(multisigRawTransactionHexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(195, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createMultisigTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMultisigTransactionButtonActionPerformed
        // get raw transaction info from Transaction Id of Contract Sent to Multisig that was sent by the Registry Office 
        GetRawTransactionModel getRawTransactionModel = RegistryServiceControl.getRawTransaction(transactionIdOfContractSentToMultisigTextField.getText());
        long vout = -1;
        
        // get vout from Transaction Id of Contract Sent to Multisig that was sent by the Registry Office if there is no error
        if(getRawTransactionModel.getError() == null){
            vout = getRawTransactionModel.getResult().getVout().get(0).getN();
        }
        // create raw transaction and get rawTxHex from created raw transaction
        String rawTxHex = RegistryServiceControl.createRawTransaction(transactionIdOfContractSentToMultisigTextField.getText(), vout, StringsService.PLATFORM.getORD_REG_ADDRESS(), 0.00008000);
        // show error message on UI if creating Multisig transaction failed
        if (vout == -1){
            multisigRawTransactionHexTextField.setText("Invalid raw transaction ID");
        // show Multisig raw Transaction Hex on UI    
        }else{
//            multisigTransactionHexTextArea.setWrapStyleWord(true);
            multisigRawTransactionHexTextField.setText(rawTxHex);
        }
        
        
    }//GEN-LAST:event_createMultisigTransactionButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CreateMultisigTransactionLabel;
    private javax.swing.JButton createMultisigTransactionButton;
    private javax.swing.JLabel multisigRawTransactionHexLabel;
    private java.awt.TextField multisigRawTransactionHexTextField;
    private java.awt.TextField transactionIdOfContractSentToMultisigTextField;
    private javax.swing.JLabel transactionIdOfTransferredContractLabel;
    // End of variables declaration//GEN-END:variables
}

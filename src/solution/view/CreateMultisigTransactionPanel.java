/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package solution.view;

import com.google.gson.Gson;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import solution.control.RegistryServiceControl;
import solution.model.GetRawTransactionModel;
import solution.model.SignRawTransactionWithWalletModel;
import solution.service.StringsService;

/**
 *
 * @author ssd
 */
public class CreateMultisigTransactionPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateMultisigTransactionPanel
     */
    public CreateMultisigTransactionPanel() {
        initComponents();
        transactionHexTextField.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateMultisigTransactionLabel = new javax.swing.JLabel();
        transactionIdOfTransferredContractLabel = new javax.swing.JLabel();
        createMultisigTransactionButton = new javax.swing.JButton();
        transactionHexLabel = new javax.swing.JLabel();
        transactionHexTextField = new java.awt.TextField();
        transactionIdOfTransferredContractTextField = new java.awt.TextField();

        CreateMultisigTransactionLabel.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        CreateMultisigTransactionLabel.setText("Create Multisig Transaction");

        transactionIdOfTransferredContractLabel.setText("Transaction ID of Transferred Contract:");

        createMultisigTransactionButton.setText("Create");
        createMultisigTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMultisigTransactionButtonActionPerformed(evt);
            }
        });

        transactionHexLabel.setText("Transaction Hex:");

        transactionHexTextField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(transactionIdOfTransferredContractLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transactionIdOfTransferredContractTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CreateMultisigTransactionLabel)
                            .addComponent(createMultisigTransactionButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(transactionHexLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(transactionHexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 308, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateMultisigTransactionLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transactionIdOfTransferredContractLabel)
                    .addComponent(transactionIdOfTransferredContractTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createMultisigTransactionButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transactionHexLabel)
                    .addComponent(transactionHexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createMultisigTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMultisigTransactionButtonActionPerformed
        GetRawTransactionModel getRawTransactionModel = RegistryServiceControl.getRawTransaction(transactionIdOfTransferredContractTextField.getText());
        long vout = -1;
        vout = getRawTransactionModel.getResult().getVout().get(0).getN();
        String rawTxHex = RegistryServiceControl.createRawTransaction(transactionIdOfTransferredContractTextField.getText(), vout, StringsService.WALLET_ADDRESS_ORD);
        transactionHexTextField.setText(rawTxHex);
        transactionHexTextField.setVisible(true);
        
    }//GEN-LAST:event_createMultisigTransactionButtonActionPerformed


    public static String signRawTransactionWithkKey(String rawTxHex, String txId, long vout, String scriptPubKey, String redeemScript) {
        try {
            ./bitcoin-cli signrawtransactionwithkey  [ { "txid": "'$utxo_txid'", "vout": '$utxo_vout', "scriptPubKey": "'$utxo_spk'", "redeemScript": "'$redeem_script'" } ] ["cN9bnTYK1ob98Tgy9e43wLJfnEXuo5ZK1T9fYfKdnoRkjm8ie4Ho"]
//            $ ./bitcoin-cli -named signrawtransactionwithkey hexstring=$rawtxhex 
//              prevtxs='''[ { "txid": "'$utxo_txid'", "vout": '$utxo_vout', "scriptPubKey": "'$utxo_spk'", "redeemScript": "'$redeem_script'" } ]''' 
            
            String[] command = new String[]{"/usr/local/apps/bitcoin-25.0/bin/bitcoin-cli",
                "signrawtransactionwithkey", "[{\"txid\":\"" + txId + "\",\"vout\":" + txId + "\",\"vout\":" + txId + "}]"};

            Process process = Runtime.getRuntime().exec(command); // for Linux

            process.waitFor();

            InputStreamReader reader
                    = new InputStreamReader(process.getInputStream());
            
            SignRawTransactionWithWalletModel signRawTransactionWithWalletModel = new Gson().fromJson(reader, SignRawTransactionWithWalletModel.class);
//            print error as output
//            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getErrorStream()));
//            String line = new String();
//            while ((line = reader.readLine()) != null) {
//                System.out.println(line);
//            }
            
            String signedTx = signRawTransactionWithWalletModel.getHex();
            return signedTx;
//            return null;
        } catch (IOException | InterruptedException ex) {
            Logger.getLogger(RegistryServiceControl.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CreateMultisigTransactionLabel;
    private javax.swing.JButton createMultisigTransactionButton;
    private javax.swing.JLabel transactionHexLabel;
    private java.awt.TextField transactionHexTextField;
    private javax.swing.JLabel transactionIdOfTransferredContractLabel;
    private java.awt.TextField transactionIdOfTransferredContractTextField;
    // End of variables declaration//GEN-END:variables
}

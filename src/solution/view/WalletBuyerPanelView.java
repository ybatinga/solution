/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package solution.view;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.RoundingMode;
import java.util.List;
import solution.control.RegistryServiceControl;
import solution.model.GetAddressInfoModel;
import solution.model.GetRawTransactionModel;
import solution.model.ListUnspentModel;
import solution.service.StringsService;

/**
 *
 * @author ssd
 */
public class WalletBuyerPanelView extends javax.swing.JPanel {
    
    private GetAddressInfoModel getAddressInfoModel;
    private String walletOwnerAddress;
    
    /**
     * Creates new form WalletBuyerPanelView
     */
    public WalletBuyerPanelView() {
        initComponents();
        GetAddressInfoModel getOwnerAddressInfoModel = RegistryServiceControl.getAddressInfo("legacy_owner", StringsService.PLATFORM.getWALLET_ADDRESS_OWNER());
        walletOwnerAddress = getOwnerAddressInfoModel.getResult().getAddress();
//        transactionIdOfPaymentSentToOwnerAddressTextField.setVisible(false);
//        paymentRawTransactionHexTextField.setVisible(false);
        
        getAddressInfoModel = RegistryServiceControl.getAddressInfo("legacy_buyer", StringsService.PLATFORM.getWALLET_ADDRESS_BUYER());
        if(getAddressInfoModel != null){
            walletAddressTextField.setText(getAddressInfoModel.getResult().getAddress());
            walletPublicKeyTextField.setText(getAddressInfoModel.getResult().getPubkey());
        }
        
        String privateKey = RegistryServiceControl.dumpPrivKey("legacy_buyer", StringsService.PLATFORM.getWALLET_ADDRESS_BUYER());
        if(privateKey != null){
            walletPrivateKeyTextField.setText(privateKey);
        }
        
        double paymentAmount = 1.485;
        paymentAmountTextField.setText(Double.toString(paymentAmount));        
        walletOwnerAddressTextField.setText(this.walletOwnerAddress);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        multisigTransactionHexTextField1 = new java.awt.TextField();
        buyerWalletLabel = new javax.swing.JLabel();
        walletAddressLabel = new javax.swing.JLabel();
        walletPublicKeyLabel = new javax.swing.JLabel();
        walletPublicKeyTextField = new java.awt.TextField();
        walletPrivateKeyLabel = new javax.swing.JLabel();
        walletPrivateKeyTextField = new java.awt.TextField();
        walletAddressTextField = new java.awt.TextField();
        redeemScriptLabel = new javax.swing.JLabel();
        redeemScriptTextField = new java.awt.TextField();
        ownerSignatureHexLabel = new javax.swing.JLabel();
        signContractButton = new javax.swing.JButton();
        ownerBuyerSignatureHexLabel = new javax.swing.JLabel();
        ownerSignatureHexTextField = new java.awt.TextField();
        onwerBuyerSignatureHexTextField = new java.awt.TextField();
        walletOwnerAddressLabel = new javax.swing.JLabel();
        walletOwnerAddressTextField = new java.awt.TextField();
        paymentAmountLabel = new javax.swing.JLabel();
        paymentAmountTextField = new java.awt.TextField();
        jSeparator1 = new javax.swing.JSeparator();
        sendPaymentButton = new javax.swing.JButton();
        transactionIdOfPaymentSentToOwnerAddressLabel = new javax.swing.JLabel();
        transactionIdOfPaymentSentToOwnerAddressTextField = new java.awt.TextField();

        buyerWalletLabel.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        buyerWalletLabel.setText("Buyer Wallet");

        walletAddressLabel.setText("Address:");

        walletPublicKeyLabel.setText("Public Key:");

        walletPublicKeyTextField.setBackground(new java.awt.Color(242, 242, 242));
        walletPublicKeyTextField.setEditable(false);

        walletPrivateKeyLabel.setText("Private Key:");

        walletPrivateKeyTextField.setBackground(new java.awt.Color(242, 242, 242));
        walletPrivateKeyTextField.setEditable(false);

        walletAddressTextField.setBackground(new java.awt.Color(242, 242, 242));
        walletAddressTextField.setEditable(false);

        redeemScriptLabel.setText("Redeem Script:");

        ownerSignatureHexLabel.setText("Owner Signature Hex:");

        signContractButton.setText("Sign Contract ");
        signContractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signContractButtonActionPerformed(evt);
            }
        });

        ownerBuyerSignatureHexLabel.setText("Owner and Buyer Signature Hex:");

        onwerBuyerSignatureHexTextField.setBackground(new java.awt.Color(242, 242, 242));
        onwerBuyerSignatureHexTextField.setEditable(false);
        onwerBuyerSignatureHexTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        walletOwnerAddressLabel.setText("Owner Wallet Address:");

        walletOwnerAddressTextField.setBackground(new java.awt.Color(242, 242, 242));
        walletOwnerAddressTextField.setEditable(false);

        paymentAmountLabel.setText("Payment Amount:");

        paymentAmountTextField.setBackground(new java.awt.Color(242, 242, 242));
        paymentAmountTextField.setEditable(false);

        sendPaymentButton.setText("Send Payment");
        sendPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendPaymentButtonActionPerformed(evt);
            }
        });

        transactionIdOfPaymentSentToOwnerAddressLabel.setText("Transaction ID of Payment Sent to Owner Address:");

        transactionIdOfPaymentSentToOwnerAddressTextField.setBackground(new java.awt.Color(242, 242, 242));
        transactionIdOfPaymentSentToOwnerAddressTextField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(transactionIdOfPaymentSentToOwnerAddressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(transactionIdOfPaymentSentToOwnerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ownerSignatureHexLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ownerSignatureHexTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(buyerWalletLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(walletPrivateKeyLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(walletPrivateKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(walletPublicKeyLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(walletPublicKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(walletAddressLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(walletAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(signContractButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ownerBuyerSignatureHexLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(onwerBuyerSignatureHexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(redeemScriptLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(redeemScriptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(walletOwnerAddressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(walletOwnerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(paymentAmountLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(sendPaymentButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buyerWalletLabel)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(walletAddressLabel)
                    .addComponent(walletAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(walletPublicKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(walletPublicKeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(walletPrivateKeyLabel)
                    .addComponent(walletPrivateKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redeemScriptLabel)
                    .addComponent(redeemScriptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ownerSignatureHexLabel)
                    .addComponent(ownerSignatureHexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(signContractButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ownerBuyerSignatureHexLabel)
                    .addComponent(onwerBuyerSignatureHexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(walletOwnerAddressLabel)
                    .addComponent(walletOwnerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentAmountLabel)
                    .addComponent(paymentAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(sendPaymentButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(transactionIdOfPaymentSentToOwnerAddressLabel)
                    .addComponent(transactionIdOfPaymentSentToOwnerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void signContractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signContractButtonActionPerformed
        
        // GET ALL PARAMETERS TO signRawTransactionWithkKey
        // Multisig Raw Transaction Hex:
        String multisigRawTransactionHex = ownerSignatureHexTextField.getText();
        // Transaction ID of Contract Sent to Multisig:
        String transactionIdOfContractSentToMultisig = RegistryServiceControl.decodeRawTransaction(multisigRawTransactionHex);
        GetRawTransactionModel getRawTransactionModel = RegistryServiceControl.getRawTransaction(transactionIdOfContractSentToMultisig);
        // Vout of Transaction ID of Contract Sent to Multisig:
        long vout = getRawTransactionModel.getResult().getVout().get(0).getN();
        // Script that locked transaction:
        String scriptPubKeyOfContractSentToMultisig = getRawTransactionModel.getResult().getVout().get(0).getScriptPubKey().getHex();
        // Buyer wallet private key:
        String walletBuyerPrivateKeyText = walletPrivateKeyTextField.getText();
        // Multisig Redeem Script 
        String redeemScript = redeemScriptTextField.getText();
        
        String buyerSignatureHex = RegistryServiceControl.signRawTransactionWithkKey(
                multisigRawTransactionHex, // Multisig Raw Transaction Hex
                walletBuyerPrivateKeyText, // Buyer wallet private key
                transactionIdOfContractSentToMultisig, // Transaction ID of Contract Sent to Multisig
                vout, // Vout of Transaction ID of Contract Sent to Multisig
                scriptPubKeyOfContractSentToMultisig, // Script that locked transaction of Contract Sent to Multisig
                redeemScript // Multisig Redeem Script 
        ); 
        
        onwerBuyerSignatureHexTextField.setText(buyerSignatureHex);
    }//GEN-LAST:event_signContractButtonActionPerformed

    private void sendPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendPaymentButtonActionPerformed
        
        String paymentRawTransactionHex = null;
        
        List<ListUnspentModel>  listUnspentModelList = RegistryServiceControl.listUnspent(
                StringsService.wallet_buyer, 
                getAddressInfoModel.getResult().getAddress(),                 
                Double.parseDouble(paymentAmountTextField.getText()));
        
        if (listUnspentModelList.isEmpty()) {
            transactionIdOfPaymentSentToOwnerAddressTextField.setText("It cannot create paymento transaction because listUnspent list is empty");
//            paymentRawTransactionHexTextField.setVisible(true);
        } else {

            String txId = listUnspentModelList.get(0).getTxid();
            long vout = listUnspentModelList.get(0).getVout();
            BigDecimal amount = BigDecimal.valueOf(listUnspentModelList.get(0).getAmount());
            BigDecimal paymentAmount = BigDecimal.valueOf(Double.parseDouble(paymentAmountTextField.getText()));
            BigDecimal change = amount.subtract(paymentAmount);
            BigDecimal changeMinusTxFee = change.subtract(new BigDecimal(0.00001).setScale(5, RoundingMode.DOWN)); // sutract 0.00001 BTC so that this to 0.00001 BTC amount is used to pay for transaction fee

            paymentRawTransactionHex = RegistryServiceControl.createRawTransactionWithChangeAddress(
                    txId,
                    vout,
                    walletOwnerAddress,
                    Double.parseDouble(paymentAmount.toString()),
                    getAddressInfoModel.getResult().getAddress(),
                    Double.parseDouble(changeMinusTxFee.toString()));

        }
        
        String signedTx = RegistryServiceControl.signRawTransactionWithWallet(paymentRawTransactionHex, StringsService.wallet_buyer);


        String txIdOfPaymentSentToOwnerAddress = RegistryServiceControl.sendRawTransaction(
                signedTx, 
                StringsService.wallet_buyer);
        transactionIdOfPaymentSentToOwnerAddressTextField.setText(txIdOfPaymentSentToOwnerAddress);
//        transactionIdOfPaymentSentToOwnerAddressTextField.setVisible(true);
    }//GEN-LAST:event_sendPaymentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel buyerWalletLabel;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.TextField multisigTransactionHexTextField1;
    private java.awt.TextField onwerBuyerSignatureHexTextField;
    private javax.swing.JLabel ownerBuyerSignatureHexLabel;
    private javax.swing.JLabel ownerSignatureHexLabel;
    private java.awt.TextField ownerSignatureHexTextField;
    private javax.swing.JLabel paymentAmountLabel;
    private java.awt.TextField paymentAmountTextField;
    private javax.swing.JLabel redeemScriptLabel;
    private java.awt.TextField redeemScriptTextField;
    private javax.swing.JButton sendPaymentButton;
    private javax.swing.JButton signContractButton;
    private javax.swing.JLabel transactionIdOfPaymentSentToOwnerAddressLabel;
    private java.awt.TextField transactionIdOfPaymentSentToOwnerAddressTextField;
    private javax.swing.JLabel walletAddressLabel;
    private java.awt.TextField walletAddressTextField;
    private javax.swing.JLabel walletOwnerAddressLabel;
    private java.awt.TextField walletOwnerAddressTextField;
    private javax.swing.JLabel walletPrivateKeyLabel;
    private java.awt.TextField walletPrivateKeyTextField;
    private javax.swing.JLabel walletPublicKeyLabel;
    private java.awt.TextField walletPublicKeyTextField;
    // End of variables declaration//GEN-END:variables

//    public GetAddressInfoModel getGetAddressInfoModel() {
//        return getAddressInfoModel;
//    }
}
